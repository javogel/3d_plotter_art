"use strict";
exports.__esModule = true;
var mesh_1 = require("./mesh");
var triangle_1 = require("./triangle");
var vector_1 = require("./vector");
function parseIndex(value, length) {
    var n = parseInt(value, 0);
    if (n < 0) {
        n += length;
    }
    return n;
}
/**
 * Parses Wavefront OBJ files
 * @param data raw .OBJ file data
 */
function loadOBJ(data) {
    var lines = data.split("\n");
    // 1-based indexing
    var vs = [new vector_1["default"](0, 0, 0)];
    var triangles = [];
    var _loop_1 = function (line) {
        var parts = line.split(" ");
        var keyword = parts[0];
        var args = parts.slice(1);
        switch (keyword) {
            case "v": {
                var f = args.map(function (a) { return parseFloat(a); });
                var v = new vector_1["default"](f[0], f[1], f[2]);
                vs.push(v);
                break;
            }
            case "f": {
                var fvs_1 = [];
                args.forEach(function (arg, i) {
                    var vertex = (arg + "//").split("/");
                    fvs_1[i] = parseIndex(vertex[0], vs.length);
                });
                for (var i = 1; i < fvs_1.length - 1; i++) {
                    var i1 = 0;
                    var i2 = i;
                    var i3 = i + 1;
                    var t = new triangle_1["default"](vs[fvs_1[i1]], vs[fvs_1[i2]], vs[fvs_1[i3]]);
                    triangles.push(t);
                }
            }
        }
    };
    for (var _i = 0, lines_1 = lines; _i < lines_1.length; _i++) {
        var line = lines_1[_i];
        _loop_1(line);
    }
    return new mesh_1["default"](triangles);
}
exports.loadOBJ = loadOBJ;
